modules:
  - name: aws_key_pair
    type: terraform
    source: github.com/terraform-aws-modules/terraform-aws-key-pair?ref=v0.6.0
    providers:
    - aws:
        region: {{ .variables.region }}
    inputs:
      create_key_pair: true
      public_key: {{ .variables.public_key }}
      key_name: {{ .variables.public_key_name }}
  - name: route53
    type: terraform
    source: github.com/shalb/cluster.dev//terraform/aws/route53?ref=new-reconciler
    inputs:
      region: {{ .variables.region }}
      cluster_name: {{ .name }}
      cluster_domain: {{ .variables.domain }}
      zone_delegation: {{ if eq .variables.domain "cluster.dev" }}true{{ else }}false{{ end }}
  {{- if not .variables.vpc_id }}
  - name: vpc
    type: terraform
    source: terraform-aws-modules/vpc/aws
    inputs:
      name: {{ .name }}
      azs: {{ insertYAML .variables.azs }}
      vpc_id: {{ .variables.vpc_id }}
  {{- end }}
  - name: k3s
    type: terraform
    source: github.com/shalb/terraform-aws-k3s.git?ref=v0.1.2
    inputs:
      cluster_name: {{ .name }}-1
      extra_args:
        - "--disable traefik"
      domain: {{ remoteState "this.route53.domain" }}
      kubeconfig_filename: "../kubeconfig"
      k3s_version: "1.19.3+k3s1"
      {{- if not .variables.vpc_id }}
      public_subnets: {{ remoteState "this.vpc.public_subnets" }}
      {{- end }}
      {{- if .variables.vpc_id }}
      public_subnets: {{ insertYAML .variables.public_subnets }}
      {{- end }}
      key_name: {{ remoteState "this.aws_key_pair.this_key_pair_key_name" }}
      region: {{ .variables.region }}
      s3_bucket: {{ .variables.bucket }}
      master_node_count: 1
      worker_node_groups: {{ insertYAML .variables.worker_node_groups  }}
  - name: argocd
    type: helm
    source:
      repository: "https://argoproj.github.io/argo-helm"
      chart: "argo-cd"
      version: "2.11.0"
    pre_hook:
      command: export KUBECONFIG=../kubeconfig || aws s3 cp s3://{{ .variables.bucket }}/{{ .name }}-1/kubeconfig ../kubeconfig
      on_destroy: true
    kubeconfig: ../kubeconfig
    depends_on: this.k3s
    additional_options:
      namespace: "argocd"
      create_namespace: true
    inputs:
      global.image.tag: v1.8.3
      service.type: LoadBalancer
      server.certificate.domain: argocd.{{ .name }}.{{ .variables.domain }}
      server.ingress.enabled: true
      server.ingress.hosts[0]: argocd.{{ .name }}.{{ .variables.domain }}
      server.ingress.tls[0].hosts[0]: argocd.{{ .name }}.{{ .variables.domain }}
      server.config.url: https://argocd.{{ .name }}.{{ .variables.domain }}
      configs.secret.argocdServerAdminPassword: testPassTmp
  - name: argocd_apps
    type: kubernetes
    source: ./argocd-apps/
    kubeconfig: ../kubeconfig
    depends_on: this.argocd