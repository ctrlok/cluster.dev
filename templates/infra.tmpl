# set additional template variables
{{- $gitUrl := "github.com/shalb/cluster.dev//terraform/aws" }}
{{- $branch := "new-reconciler" }}
modules:
  - name: route53
    type: terraform
    source: {{ $gitUrl }}/route53?ref={{ $branch }}
    inputs:
      region: {{ .variables.region }}
      cluster_name: {{ .name }}
      cluster_domain: {{ .variables.domain }}
      zone_delegation: {{ if eq .variables.domain "cluster.dev" }}true{{ else }}false{{ end }}
  - name: vpc
    type: terraform
    source: {{ $gitUrl }}/vpc?ref={{ $branch }}
    inputs:
      region: {{ .variables.region }}
      cluster_name: {{ .name }}
      availability_zones: {{ insertYAML .variables.azs }}
  - name: minikube
    type: terraform
    source: {{ $gitUrl }}/minikube?ref={{ $branch }}
    inputs:
      region: {{ .variables.region }}
      cluster_name: {{ .name }}
      aws_instance_type: {{ .variables.instance_type }}
      hosted_zone: {{ .name }}.{{ .variables.domain }}
      aws_subnet_id: {{ remoteState "this.vpc.public_subnets[0]" }}
      bucket_name: {{ .variables.bucket }}
  - name: get_kubeconfig
    type: shell
    depends_on: this.minikube
    command: "aws s3 cp s3://{{ .variables.bucket }}/kubeconfig_{{ .name }} ../kubeconfig_{{ .name }} && echo set_output_kubeconfig_path=../kubeconfig{{ .name }} "
  - name: addons
    type: terraform
    source: {{ $gitUrl }}/addons?ref={{ $branch }}
    pre_hook: this.get_kubeconfig
    inputs:
      region: {{ .variables.region }}
      cluster_name: {{ .name }}
      kubeconfig: {{ output "this.get_kubeconfig.kubeconfig_path" }}
      cluster_cloud_domain: {{ .name }}.{{ .variables.domain }}
      dns_zone_id: {{ remoteState "this.route53.zone_id" }}
